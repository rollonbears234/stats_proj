convert <- function(x, to = "celsius") {
switch(tolower(to),
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
convert(30, 'celsius')
to_celsius <- function(x) {
(x - 32) * (5/9)
}
to_kelvin <- function(x) {
(x + 459.67) * (5/9)
}
to_reaumur <- function(x) {
(x - 32) * (4/9)
}
to_rankine <- function(x) {
x + 459.67
}
convert(30, 'celsius')
convert(30, 'Celsius')
convert(30, 'CELSIUS')
for (i in 1:10) {
print(cat("file", i))
}
for (i in 1:10) {
print(cat("file", i, sep = ""))
}
for (i in 1:10) {
print(paste("file", i, sep = ""))
}
paster <- function(x, nums) {
return(print(paste(x, nums)))
}
convert <- function(x, to = "celsius") {
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
rep("file", n = 10)
?rep
rep("file", times = 10)
paster(rep("file", times = 10), 1:10)
paster <- function(x, nums) {
return(print(paste(x, nums, sep = "")))
}
paster(rep("file", times = 10), 1:10)
paste(rep("file", times = 10, sep = ""))
paste(rep("file", times = 10), 1:10, sep = "")
names <- paste(rep("file", times = 10), 1:10, sep = "")
names
?sub_str
?substr
substr(names, 1, 4) = "dataset"
names
?strsub
?substr
names <- paste(rep("file", times = 10), 1:10, sep = "")
sub("file", names)
sub("file","dataset", names)
print(paste("file.", i, sep = ""))
for (i in 1:10) {
print(paste("file.", i, sep = ""))
}
paster <- function(x, nums) {
return(print(paste(x, nums, sep = "")))
}
paster(rep("file.", times = 10), 1:10)
paste(rep("file.", times = 10), 1:10, sep = "")
for (i in 1:10) {
print(paste(paste("file.", i, sep = ""), ".csv")
}
for (i in 1:10) {
print(paste(paste("file.", i, sep = "")), ".csv")
}
paster(paster(rep("file.", times = 10), 1:10), ".csv")
paste(paste(rep("file.", times = 10), 1:10, sep = ""), ".csv")
paste(paste(rep("file.", times = 10), 1:10, sep = ""), ".csv", sep = "")
for (i in 1:10) {
paste(paste("file", i, sep = "")), ".csv")
for (i in 1:10) {
paste(paste("file", i, sep = "")), ".csv")
for (i in 1:10) {
paste(paste("file", i, sep = ""), ".csv")
}
for (i in 1:10) {
print(paste(paste("file", i, sep = ""), ".csv"))
}
for (i in 1:10) {
print(paste(paste("file", i, sep = ""), ".csv", sep = ""))
}
paster <- function(x, nums) {
return(print(paste(x, nums, sep = "")))
}
paster(paster(rep("file", times = 10), 1:10), ".csv")
paste(paster(rep("file", times = 10), 1:10), ".csv")
for (i in 1:10) {
print(paste(paste("file", i, sep = ""), ".csv", sep = ""))
}
paster <- function(x, nums) {
return(print(paste(x, nums, sep = "")))
}
paster(paster(rep("file", times = 10), 1:10), ".csv")
paste(paste(rep("file", times = 10), 1:10, sep = ""), ".csv", sep = "")
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("This is the first line", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
outfile
setwd
setwd("~/Documents/Fall 2015/Stats 133/repo_files/lab09")
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("title: strings", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("author: Bryan Alcorn 24393522", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n", file = outfile, append = TRUE)
cat("\ndata:today's date",
file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("output: html_document")
cat("output: html_document", file = outfile, append = TRUE)
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("title: strings", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("author: Bryan Alcorn 24393522", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\ndata:today's date",
file = outfile, append = TRUE)
cat("\noutput: html_document", file = outfile, append = TRUE)
is_color <- function(x) {
reutrn(try(col2rgb(x)))
}
is_color('yellow')  # TRUE
is_color <- function(x) {
return(try(col2rgb(x)))
}
# test it:
is_color('yellow')  # TRUE
is_color <- function(x) {
return(try(col2rgb(x), silent = TRUE))
}
# test it:
is_color('yellow')  # TRUE
color2rgb("wefuhweifo")
colours
"yellow" %in% colours
?colours
?colours
colors(TRUE)
is_color <- function(x) {
return(x %in% colours(true))
}
is_color('yellow')  # TRUE
is_color <- function(x) {
return(x %in% colours(TRUE))
}
# test it:
is_color('yellow')  # TRUE
is_color('blu')     # FALSE
is_color('turkuiose') # FALSE
plot
scatter.smooth()
coloplot <- function(colr) {
if (!is_color(colr)) {
return(paste("invalid color", colr, sep = " "))
}
return(function(x,y) plot(x,y, col = colr, title = paste("testing color", colr, sep = " ")))
}
colplot('tomato')
colplot <- function(colr) {
if (!is_color(colr)) {
return(paste("invalid color", colr, sep = " "))
}
return(function(x,y) plot(x,y, col = colr, title = paste("testing color", colr, sep = " ")))
}
colplot('tomato')
colplot('tomate')
colplot('tomato')(1:10, 23:33)
colplot('tomato')(1:10, 21:30)
?plot
colplot <- function(colr) {
if (!is_color(colr)) {
return(paste("invalid color", colr, sep = " "))
}
return(function(x,y) plot(x,y, col = colr, main = paste("testing color", colr, sep = " ")))
}
colplot('tomato')(1:10, 21:30)
# this stops with error message
colplot('tomate')
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
num_vowels <- function(char_vect) {
count <- rep(0, times = 5)
vowel_names <- c("a", "e", "i", "o", "u")
names(count) <- vowel_names
vowels <- c("a", "e", "i", "o", "u")
for (i in tolower(char_vect)) {
if (i %in% vowels) {
count[which(vowels == i)] <- count[which(vowels == i)] + 1
}
}
return(count)
}
num_vowels(letrs)
count_stuff <- function(text) {
return(c(
"letters:" = lenght(x),
"vowels:" = num_vowels(X),
"consonants:" = grep(pattern = "[^aeiou]", x = text, ignore.case = FALSE)
)
)
}
grep(pattern = "[^aeiou]", x = letrs, ignore.case = FALSE)
count_stuff <- function(text) {
return(c(
"letters:" = lenght(x),
"vowels:" = num_vowels(X),
"consonants:" = length(grep(pattern = "[^aeiou]", x = text, ignore.case = FALSE))
)
)
}
count_stuff(letrs)
count_stuff <- function(text) {
return(c(
"letters:" = length(x),
"vowels:" = num_vowels(X),
"consonants:" = length(grep(pattern = "[^aeiou]", x = text, ignore.case = FALSE))
)
)
}
count_stuff(letrs)
count_stuff <- function(text) {
return(c(
"letters:" = length(text),
"vowels:" = num_vowels(text),
"consonants:" = length(grep(pattern = "[^aeiou]", x = text, ignore.case = FALSE))
)
)
}
count_stuff(letrs)
count_stuff <- function(text) {
return(c(
"letters:" = length(text),
"vowels:" = sum(num_vowels(text)),
"consonants:" = length(grep(pattern = "[^aeiou]", x = text, ignore.case = FALSE))
)
)
}
count_stuff(letrs)
